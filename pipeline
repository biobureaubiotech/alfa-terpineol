gunzip A1_1.fq.gz
gunzip A1_2.fq.gz
wc -l A1_1.fq
wc -l A1_2.fq
java -jar /usr/share/java/trimmomatic.jar PE -threads 30 -phred33 /home/bioma/alfa-terpineol/A1_1.fq /home/bioma/alfa-terpineol/A1_2.fq /home/bioma/alfa-terpineol/A1_1.forward_paired.fq.gz /home/bioma/alfa-terpineol/A1_1.forward_unpaired.fastq.gz /home/bioma/alfa-terpineol/A1_2.reverse_paired.fq.gz /home/bioma/alfa-terpineol/A1_2.reverse.unpaired.gz ILLUMINACLIP:/home/bioma/alfa-terpineol/barcodes:2:30:10 LEADING:10 TRAILING:10 SLIDINGWINDOW:4:2 MINLEN:65
fastqc A1_1.forward_paired.fq
fastqc A1_2.reverse_paired.fq
#then I've run two assemblers: (i) spades and (ii) masurca
./masurca config.file.masurca.sphin
# the configure file config.file.masurca.sphin is uploaded in this github project
./assemble.sh
#commands for spades
python spades.py -1 A1_1.forward_paired.fq -2 A1_2.reverse_paired.fq
#I've run both assemblers in BioMA's local computer. Both did not used more than 10Gb of memory RAM.
#After the assembly, I've run the script Prodigal for gene and protein prediction (http://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-11-119)
./prodigal
#then I counted the size of proteins
perl /home/bioma/scripts/conta_tamanho_multifasta.pl
#then I run BUSCO v3 using the database for proteobacteria
run_BUSCO.py -i genome.scf.fasta -m genome -c 4 -f -l ./proteobacteria_odb9/ -o BUSCOv3.sphin
#series of BLAST analysis and KEGG.


